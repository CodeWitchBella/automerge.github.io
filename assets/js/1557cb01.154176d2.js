"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8554],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,g=d["".concat(u,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6416:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2},i="Setup",l={unversionedId:"tutorial/setup",id:"tutorial/setup",isDocsHomePage:!1,title:"Setup",description:"We will build a small web app during this tutorial. This tutorial is designed to walk you through the basic concepts of Automerge so that you can use it in your own apps. For a deeper understanding and common patterns that you would likely need in a production application, see the Cookbook. You will find that these two resources are complementary.",source:"@site/docs/tutorial/setup.md",sourceDirName:"tutorial",slug:"/tutorial/setup",permalink:"/docs/tutorial/setup",editUrl:"https://github.com/automerge/automerge.github.io/edit/main/docs/tutorial/setup.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/tutorial/introduction"},next:{title:"Your first document",permalink:"/docs/tutorial/create-a-document"}},u=[{value:"What you need to know",id:"what-you-need-to-know",children:[],level:2},{value:"What are we building?",id:"what-are-we-building",children:[],level:2},{value:"Setup",id:"setup-1",children:[],level:2}],s={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setup"},"Setup"),(0,r.kt)("p",null,"We will build a small web app during this tutorial. This tutorial is designed to walk you through the basic concepts of Automerge so that you can use it in your own apps. For a deeper understanding and common patterns that you would likely need in a production application, see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/cookbook/modeling-data/"},"Cookbook"),". You will find that these two resources are complementary."),(0,r.kt)("h2",{id:"what-you-need-to-know"},"What you need to know"),(0,r.kt)("p",null,"To complete this tutorial, we assume you have a working knowledge of HTML and JavaScript. If you're coming from another programming language, we've designed it to be simple enough that you should also be able to follow along."),(0,r.kt)("h2",{id:"what-are-we-building"},"What are we building?"),(0,r.kt)("p",null,"Today, you will build a simple to-do-list app with plain JavaScript. The resulting code from the tutorial will be less than 100 lines, and cover:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modeling application state using an Automerge document"),(0,r.kt)("li",{parentName:"ul"},"Making changes to documents"),(0,r.kt)("li",{parentName:"ul"},"Persisting state in IndexedDB to preserve the document after restarting the browser tab (using ",(0,r.kt)("a",{parentName:"li",href:"https://localforage.github.io/localForage/"},"localForage"),")"),(0,r.kt)("li",{parentName:"ul"},"Supporting real-time collaboration in the same browser (using ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel"},"BroadcastChannel"),")")),(0,r.kt)("h2",{id:"setup-1"},"Setup"),(0,r.kt)("p",null,"Because automerge is backed by a WebAssembly package we will need a bundler, we'll be using WebPack."),(0,r.kt)("p",null,"First we get a basic webpack site off the ground:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir automerge-todo\ncd automerge-todo\nyarn init -y\nyarn add webpack webpack-dev-server webpack-cli @automerge/automerge\n")),(0,r.kt)("p",null,"Create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"webpack.config.js")," with the following contents"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const path = require('path');\n\nmodule.exports = {\n  experiments: { asyncWebAssembly: true },\n  target: 'web',\n  entry: './src/index.js',\n  output: {\n    filename: 'main.js',\n    path: path.resolve(__dirname, 'public'),\n  },\n  mode: \"development\", // or production\n  performance: {       // we dont want the wasm blob to generate warnings\n     hints: false,\n     maxEntrypointSize: 512000,\n     maxAssetSize: 512000\n  }\n};\n")),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"public/index.html")," file that contains the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <title>Getting Started</title>\n  </head>\n  <body>\n    <script src="main.js"><\/script>\n  </body>\n</html>\n')),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"src/index.js")," file. In this file, we will create our first document:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import * as Automerge from "@automerge/automerge"\nlet doc = Automerge.init()\nconsole.log(doc)\n')),(0,r.kt)("p",null,"Now run ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn webpack serve")," and go to ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8080")))}p.isMDXComponent=!0}}]);